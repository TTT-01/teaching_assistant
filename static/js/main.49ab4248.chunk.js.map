{"version":3,"sources":["components/img/favicon.jpg","components/img/bg1.gif","components/img/book.png","components/img/bulb.png","components/audio/bg.mp3","components/vanillajs.js","components/Navbar.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","scrollFunction","document","body","scrollTop","documentElement","getElementById","style","width","height","opacity","display","window","onscroll","Navbar","indicator","querySelector","items","querySelectorAll","handleIndicator","el","forEach","item","classList","remove","removeAttribute","offsetWidth","left","offsetLeft","backgroundColor","getAttribute","add","color","index","addEventListener","e","target","contains","navbar","className","src","favicon","alt","class","href","active-color","Component","screenfull","require","Home","script","createElement","async","appendChild","isEnabled","on","console","log","isFullscreen","fontFamily","textShadow","book","bg0","bg1","id","fontSize","onClick","toggle","autoPlay","loop","bgad","type","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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AAU,OAGb,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,uCCxDckC,QACW,cAA7B7D,OAAO8D,SAASC,UAEe,UAA7B/D,OAAO8D,SAASC,UAEhB/D,OAAO8D,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7E,SAASI,eAAe,SDyHpB,kBAAmB0E,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/B,QAAQ+B,MAAMA,EAAMC,c","file":"static/js/main.49ab4248.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.de37257d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg1.0f94a227.gif\";","module.exports = __webpack_public_path__ + \"static/media/book.a9041ccc.png\";","module.exports = __webpack_public_path__ + \"static/media/bulb.73994dbe.png\";","module.exports = __webpack_public_path__ + \"static/media/bg.39903cc1.mp3\";","\r\n\r\n\r\nexport function navbar()\r\n{\r\n\"use strict\";\r\nvar indicator = document.querySelector('.nav-indicator');\r\nvar items = document.querySelectorAll('.nav-item');\r\nfunction handleIndicator(el) {\r\n  items.forEach(function (item) {\r\n    item.classList.remove('is-active');\r\n    item.removeAttribute('style');\r\n  });\r\n  indicator.style.width = el.offsetWidth + \"px\";\r\n  indicator.style.left = el.offsetLeft + \"px\";\r\n  indicator.style.backgroundColor = el.getAttribute('active-color');\r\n  el.classList.add('is-active');\r\n  el.style.color = el.getAttribute('active-color');\r\n}\r\nitems.forEach(function (item, index) {\r\n  item.addEventListener('click', function (e) {handleIndicator(e.target);});\r\n  item.classList.contains('is-active') && handleIndicator(item);\r\n});\r\n}\r\n\r\n\r\nwindow.onscroll = function() {scrollFunction()};\r\n\r\nexport function scrollFunction() {\r\n  if (document.body.scrollTop > 50 || document.documentElement.scrollTop > 50) {\r\n    document.getElementById(\"bg1\").style.width = \"15vw\";\r\n    document.getElementById(\"bg1\").style.height = \"35vh\";\r\n    document.getElementById(\"bg1\").style.opacity = \"0.4\";\r\n    document.getElementById(\"gotopbtn\").style.display = \"block\";\r\n  } \r\n  else {\r\n    document.getElementById(\"bg1\").style.width = \"50vw\";\r\n    document.getElementById(\"bg1\").style.height = \"70vh\";\r\n    document.getElementById(\"bg1\").style.opacity = \"0.9\";\r\n    document.getElementById(\"gotopbtn\").style.display = \"none\";\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './navbar.css'\r\nimport {navbar} from './vanillajs'\r\nimport favicon from './img/favicon.jpg'\r\n\r\nexport class Navbar extends Component {\r\n\r\n       componentDidMount(){\r\n           navbar();\r\n       }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"nav0\">\r\n                    <img className=\"favicon\"  src={favicon} alt=\"\"/>\r\n                     <nav class=\"nav\">\r\n                      <a href=\"#\" class=\"nav-item is-active\" active-color=\"orange\">Home</a>\r\n                      <a href=\"#\" class=\"nav-item\" active-color=\"green\">Subjects</a>\r\n                      <a href=\"#\" class=\"nav-item\" active-color=\"blue\">Participants</a>\r\n                     \r\n                      <span class=\"nav-indicator\"></span>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react'\r\nimport './home.css'\r\nimport bg0 from './img/bg1.gif'\r\nimport book from './img/book.png'\r\nimport {scrollFunction} from './vanillajs'\r\nimport bg1 from './img/bulb.png'\r\nimport bgad from './audio/bg.mp3'\r\n\r\n\r\n\r\nconst screenfull = require('screenfull');\r\n\r\nexport class Home extends Component {\r\n\r\n componentDidMount() {\r\n    \r\n    scrollFunction();  \r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://kit.fontawesome.com/a076d05399.js\";\r\n    script.async = true;\r\n    document.body.appendChild(script)\r\n\r\n        if (screenfull.isEnabled) {\r\n          screenfull.on('change', () => {\r\n            console.log('Am I fullscreen?', screenfull.isFullscreen ? 'Yes' : 'No');\r\n          });\r\n        };\r\n    }\r\n            \r\n          \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"bg\">\r\n                      <div class=\"container0\">\r\n                        <div class=\"cntr0\" style={{fontFamily:'Lucida Bright'}}>\r\n                        <div class=\"overlay0\"><h1 class=\"text0\" style={{color:'white',textShadow:'1px 1px 2px black, 0 0 1em blue, 0 0 0.2em blue'}}><big>I am a dedicated  </big></h1><big>üë®‚Äçüéì</big></div>\r\n\r\n                          @<big style={{color: 'red', fontFamily: 'Herculanum'}}>T</big>eaching <big style={{color:' rgb(255, 67, 20)', fontFamily: 'Herculanum'}}>A</big>ssistant!\r\n                          <br></br>\r\n                        <small class=\"cntr1\" style={{fontFamily:'Curlz MT'}}> <small><small> <big style={{color:'red'}}>T</big>otally <big style={{color: 'red'}}>A</big>wesome</small></small></small>\r\n                        </div>\r\n                     </div>\r\n\r\n                     <h1 class=\"text1\" style={{textShadow:'0px 2px 0px red'}}><big class=\"text10\" >Teach </big><big class=\"text11\" > Love </big><big class=\"text12\" >Inspire</big></h1>\r\n\r\n                     <img src={book} alt=\"\" class=\"book\"  />\r\n                     <img src={bg0} alt=\"\" class=\"bg0\"  />\r\n                     <img src={bg1} id=\"bg1\" alt=\"\"></img>\r\n                 </div>\r\n                 <a  id=\"gotopbtn\" href=\"#\" style={{fontSize:35 }}><i  class='far'>&#xf35b;</i></a>\r\n                    <h4 class=\"gtbh\">SCROLL TO TOP</h4>\r\n                    <button onClick={ () => {\r\n                                   if (screenfull.isEnabled) {\r\n                                     screenfull.toggle();\r\n                                   }\r\n                                 }}>Toggle fullscreen</button>\r\n               <audio autoPlay loop >\r\n                     <source src={bgad} type=\"audio/mp3\"  />\r\n               </audio>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\n\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n\n     \n      <Navbar />\n      <Home />\n      \n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      <h1>Hello</h1>\n      </div>\n      \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}